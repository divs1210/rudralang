ns!(ackermann,
  {} =>

  letfn A := [m, n] =>
    cond(
      zero?(m) => inc(n)
      zero?(n) => A(dec(m), 1)
      :else    => A(dec(m), A(m, dec(n)))
    )

  defn!(main!, {}, [_, m, n] =>
    let [m, n] := map(string->number, [m, n])
    println!("A(" m ", " n ") = " A(m, n))
  )
)